pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'

      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
//       environment {
//         SONAR_URL = "http://34.201.116.83:9000"
//       }
      steps {
      echo "sonarqube scan done"
//         withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
//           sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
//         }
      }
    }

    stage ('building docker image'){
    environment {
            DOCKER_IMAGE = "${env.dockerhubuser}/devops-cicd:${BUILD_NUMBER}"

          }
    steps{
    echo "building docker image"
    sh 'spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
    }
    }

    stage ('Push Docker Image') {
     steps{
            echo "pushing to dockerhub"
            withCredentials([usernamePassword(credentialsId:"dockerhub",passwordVariable:"dockerhubpass",usernameVariable:"dockerhubuser")]){
            sh "docker tag mavenapp ${env.dockerhubuser}/devops-cicd:${BUILD_NUMBER}"
            sh "docker login -u ${env.dockerhubuser} -p ${env.dockerhubpass}"
            sh "docker push ${env.dockerhubuser}/devops-cicd:${BUILD_NUMBER}"
                    }
     }

    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "mavencicd"
            GIT_USER_NAME = "gshrey2002"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "gshrey2002@gmail.com"
                    git config user.name "Shrey Gupta"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
                    git add spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }
}
}
